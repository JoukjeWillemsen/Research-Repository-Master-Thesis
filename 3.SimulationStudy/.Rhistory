library(dplyr)
library(survival)
library(ggplot2)
library(cowplot)
npool <- function(dataset, dat=1){
#PoolDecisions$TTP = PoolDecisions$TTP
propvector<-vector()
for (i in 1:length(dataset)){
propvector[i]<-sum(dataset[[i]][[dat]]=="pool")
}
return(propvector/1000)
}
makeDF <- function(proportions, dat=1){ #example: proportions$PHR
TP <- vector()
FP <- vector()
for (i in 1:length(proportions)){
TP[i] = proportions[[i]][dat,3]
FP[i] = proportions[[i]][dat,4]
}
data <- data.frame(TP = TP, FP=FP)
return(data)
}
#plot(TP, FP)
#for the pooled datasets
giveproportions <- function(poolingmethod){
#input: poolingmethod = decisions$poolingmethod
proportions <- list()
for (i in 1:length(poolingmethod)){
proportions[[i]] <- matrix(NA, nrow = 8, ncol = 5)
rownames(proportions[[i]])<- c("Data11","Data12","Data13","Data14","Data21","Data22","Data23","Data24")
colnames(proportions[[i]])<- c("TP", "FP", "TP_prop", "FP_prop", "TP/FP")
for(a in 1:8){
proportions[[i]][a,1] <- sum(poolingmethod[[i]][[a]][,1][1:1000])
proportions[[i]][a,2] <- sum(poolingmethod[[i]][[a]][,2][1:1000])
proportions[[i]][a,3] <- sum(poolingmethod[[i]][[a]][,1][1:1000]/1000)
proportions[[i]][a,4] <- sum(poolingmethod[[i]][[a]][,2][1:1000]/1000)
proportions[[i]][a,5] <- proportions[[i]][a,3]/proportions[[i]][a,4]
}}
return(proportions)
}
#for the datasets where either nothing is pooled or everything is pooled
giveproportionsNOpool <- function(poolingmethod){
#input: poolingmethod = decisions$poolingmethod
proportions <- list()
for (i in 1:length(poolingmethod)){
proportions <- matrix(NA, nrow = 8, ncol = 5)
rownames(proportions)<- c("Data11","Data12","Data13","Data14","Data21","Data22","Data23","Data24")
colnames(proportions)<- c("TP", "FP", "TP_prop", "FP_prop", "TP/FP")
for(a in 1:8){
proportions[a,1] <- sum(poolingmethod[[a]][,1][1:1000])
proportions[a,2] <- sum(poolingmethod[[a]][,2][1:1000])
proportions[a,3] <- sum(poolingmethod[[a]][,1][1:1000]/1000)
proportions[a,4] <- sum(poolingmethod[[a]][,2][1:1000]/1000)
proportions[a,5] <-  proportions[a,3]/proportions[a,4]
}}
return(proportions)
}
proportionsplot <- function(dat=1, setyaxis, xlim = c(0, 1), TPFPalwayspool, TPFPneverpool){
dataframeTTP <- data.frame(
"TPFP" = makeDF(proportions = proportions$PPTTP, dat=dat)[,1]/makeDF(proportions = proportions$PPTTP, dat=dat)[,2],
"proportionpooled"= npool(dataset = PoolDecisions$TTP, dat=dat))
dataframeHR <- data.frame(
"TPFP" = makeDF(proportions = proportions$PHR, dat=dat)[,1]/makeDF(proportions = proportions$PHR, dat=dat)[,2],
"proportionpooled"= npool(dataset = PoolDecisions$CIsHR, dat=dat))
dataframeHRboot <- data.frame(
"TPFP" = makeDF(proportions = proportions$PHRboot, dat=dat)[,1]/makeDF(proportions = proportions$PHRboot, dat=dat)[,2],
"proportionpooled"= npool(dataset = PoolDecisions$BootCIsHR, dat=dat))
dataframerMean <- data.frame(
"TPFP" = makeDF(proportions = proportions$RMEANdiff, dat=dat)[,1]/makeDF(proportions = proportions$RMEANdiff, dat=dat)[,2],
"proportionpooled"= npool(dataset = PoolDecisions$CIsRMEANdiff, dat=dat))
dataframerMeanBoot <- data.frame(
"TPFP" = makeDF(proportions = proportions$PRMEANbootdiff, dat=dat)[,1]/makeDF(proportions = proportions$PRMEANbootdiff, dat=dat)[,2],
"proportionpooled"= npool(dataset = PoolDecisions$BootCIsRMEANdiff, dat=dat))
plot <- ggplot(dataframeHR, aes(x=proportionpooled, y=TPFP))+
geom_point(data= dataframeHR,  aes(x=proportionpooled, y=TPFP, colour = "HReq"), size = 3, show.legend = TRUE)+
geom_path(data= dataframeHR,  aes(x=proportionpooled, y=TPFP, colour = "HReq"), size = 1)+
geom_point(data= dataframeHRboot,  aes(x=proportionpooled, y=TPFP, colour = "HRboot"), size = 3)+
geom_path(data= dataframeHRboot,  aes(x=proportionpooled, y=TPFP, colour = "HRboot"), size = 1)+
geom_point(data= dataframeTTP,  aes(x=proportionpooled, y=TPFP, colour = "HRdiff"), size = 3)+
geom_path(data= dataframeTTP,  aes(x=proportionpooled, y=TPFP, colour = "HRdiff"), size = 1)+
geom_point(data= dataframerMeanBoot,  aes(x=proportionpooled, y=TPFP, colour = "RMSTboot"), size = 3)+
geom_path(data= dataframerMeanBoot,  aes(x=proportionpooled, y=TPFP, colour = "RMSTboot"), size = 1)+
geom_point(data= dataframerMean,  aes(x=proportionpooled, y=TPFP, colour = "RMST"), size = 3)+
geom_path(data= dataframerMean,  aes(x=proportionpooled, y=TPFP, colour = "RMST"), size = 1)+
geom_point(data= dataframerMeanBoot,  aes(x=proportionpooled, y=TPFP, colour = "RMSTboot"), size = 3)+
geom_path(data= dataframerMeanBoot,  aes(x=proportionpooled, y=TPFP, colour = "RMSTboot"), size = 1)+
scale_color_manual("", breaks = c("HRdiff" = "HRdiff", "RMSTboot"= "RMSTboot", "RMST" = "RMST", "HRboot" ="HRboot", "HReq" = "HReq"),
values=cbPalette)+
geom_hline(aes(yintercept= TPFPalwayspool, linetype = "AlwaysPool"), colour= 'black', size = 1) +
geom_hline(aes(yintercept= TPFPneverpool, linetype = "NeverPool"), colour= 'black', size = 1) +
scale_linetype_manual(name = "", values = c(1, 2),
guide = guide_legend(override.aes = list(values = c(1, 2),
color = c("black", "black"), shape = c("", ""))))+
coord_cartesian(ylim = setyaxis) +
xlab("Proportion of the datasets pooled") +
ylab("TPR/FPR") +
scale_x_continuous(limits = xlim) +
theme(aspect.ratio = 0.5)+
theme_cowplot(12)
return(plot)}
load("3.FinalAnalysis_output/3.ProportionsTPFPHRShape.Rdata")
load("3.FinalAnalysis_output/3.DecisionsFinalAnalysesHRShape.Rdata")
load("3.FinalAnalysis_output/3.Pooldecisions400HRShape.Rdata")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
makeROCplot <- function(dat = 1, setxaxis, FPalwayspool, FPneverpool, TPalwayspool, TPneverpool)
{
data <- list()
#data$TP <- rowbind()
data$TTP <- makeDF(proportions$PPTTP, dat = dat)
data$PRmeanbootdiff <- makeDF(proportions$PRMEANbootdiff, dat = dat)
data$PRMEANdiff <- makeDF(proportions$RMEANdiff, dat = dat)
data$PHRboot <- makeDF(proportions$PHRboot, dat = dat)
data$PHR <- makeDF(proportions$PHR, dat = dat)
points <- data.frame(
"method" =  c("AlwaysPool", "NeverPool"),
"FP" = c(FPalwayspool, FPneverpool),
"TP" = c(TPalwayspool, TPneverpool))
plot <- ggplot(data$PHR, aes(x=FP, y=TP))+
geom_path(data= data$TTP, aes(x=FP, y=TP, colour = "HRdiff"), size = 1, show.legend = TRUE)+
geom_path(data= data$PRmeanbootdiff, aes(x=FP, y=TP, colour = "RMSTboot"), size = 1, show.legend = TRUE)+
geom_path(data= data$PRMEANdiff, aes(x=FP, y=TP, colour = "RMST"), size = 1)+
geom_path(data= data$PHRboot, aes(x=FP, y=TP, colour = "HRboot"), size = 1)+
geom_path(data= data$PHR, aes(x=FP, y=TP, colour = "HReq"), size = 1)+
geom_point(data= data$TTP, aes(x=FP, y=TP, colour = "HRdiff"), size = 3)+
geom_point(data= data$PRmeanbootdiff, aes(x=FP, y=TP, colour = "RMSTboot"), size = 3)+
geom_point(data= data$PRMEANdiff, aes(x=FP, y=TP, colour = "RMST"), size = 3)+
geom_point(data= data$PHRboot, aes(x=FP, y=TP, colour = "HRboot"), size = 3)+
geom_point(data= data$PHR, aes(x=FP, y=TP, colour = "HReq"), size = 3)+
geom_point(data= points[1,], aes(x=FP, y=TP, shape = "Alwayspool"), colour = "black", size = 4)+
geom_point(data= points[2,], aes(x=FP, y=TP, shape = "Neverpool"), colour = "black", size = 4)+
scale_shape_manual("", breaks = c("Alwayspool" = "Alwayspool", "Neverpool" = "Neverpool"), values = c(16,17)) +
guides(linetype=FALSE) +
guides(shape = guide_legend(override.aes = list(linetype = 0)))+
scale_color_manual("", breaks = c("HRdiff" = "HRdiff", "RMSTboot"= "RMSTboot", "RMST" = "RMST", "HRboot" ="HRboot", "HReq" = "HReq"), values=cbPalette)+
labs(colour="",linetype="",shape="")+
coord_cartesian(xlim = setxaxis) +
theme_cowplot(12)
return(plot)
}
D11 <- makeROCplot(dat = 1, setxaxis = c(0.04,0.065), FPalwayspool = proportions$PAlwaysPool[1,4], FPneverpool = proportions$PNeverPool[1,4], TPalwayspool = proportions$PAlwaysPool[1,3], TPneverpool = proportions$PNeverPool[1,3])
D12 <- makeROCplot(dat = 2, setxaxis = c(0.04,0.078), FPalwayspool = proportions$PAlwaysPool[2,4], FPneverpool = proportions$PNeverPool[2,4], TPalwayspool = proportions$PAlwaysPool[2,3], TPneverpool = proportions$PNeverPool[2,3])
D13 <- makeROCplot(dat = 3, setxaxis = c(0.04,0.12), FPalwayspool = proportions$PAlwaysPool[3,4], FPneverpool = proportions$PNeverPool[3,4], TPalwayspool = proportions$PAlwaysPool[3,3], TPneverpool = proportions$PNeverPool[3,3]) #3,1
D14 <- makeROCplot(dat = 4, setxaxis = c(0.04,0.19), FPalwayspool = proportions$PAlwaysPool[4,4], FPneverpool = proportions$PNeverPool[4,4], TPalwayspool = proportions$PAlwaysPool[4,3], TPneverpool = proportions$PNeverPool[4,3]) #4,1
D21 <-  makeROCplot(dat = 5, setxaxis = c(0.04,0.19), FPalwayspool = proportions$PAlwaysPool[5,4], FPneverpool = proportions$PNeverPool[5,4], TPalwayspool = proportions$PAlwaysPool[5,3], TPneverpool = proportions$PNeverPool[5,3]) #1,2
D22 <- makeROCplot(dat = 6, setxaxis = c(0.04,0.29), FPalwayspool = proportions$PAlwaysPool[6,4], FPneverpool = proportions$PNeverPool[6,4], TPalwayspool = proportions$PAlwaysPool[6,3], TPneverpool = proportions$PNeverPool[6,3]) #2,2
D23 <- makeROCplot(dat = 7, setxaxis = c(0.04,0.43), FPalwayspool = proportions$PAlwaysPool[7,4], FPneverpool = proportions$PNeverPool[7,4], TPalwayspool = proportions$PAlwaysPool[7,3], TPneverpool = proportions$PNeverPool[7,3]) #3,2
D24 <- makeROCplot(dat = 8, setxaxis = c(0.04,0.6), FPalwayspool = proportions$PAlwaysPool[8,4], FPneverpool = proportions$PNeverPool[8,4], TPalwayspool = proportions$PAlwaysPool[8,3], TPneverpool = proportions$PNeverPool[8,3]) #4,2
arrangedfigureHR <- ggpubr::ggarrange(D11, D21, D12, D22, D13, D23, D14, D24,
labels = c(" A ", " B ","E1", "F1", "E2", "F2", "E3", "F3"),
ncol = 2, nrow = 4, common.legend = TRUE, vjust = +0.5, hjust = -1.6, align = "hv", legend = "bottom")
annotatedfigureHR <- ggpubr::annotate_figure(arrangedfigureHR,
top = ggpubr::text_grob(expression(paste(lambda["c"],"= 776.89                                   ",lambda["c"],"= 876.89")), face = "bold", size = 20),
left = ggpubr::text_grob(expression(paste(gamma["c"],"=2.184                ", gamma["c"], "=2.02                ", gamma["c"], "=1.85                ", gamma["c"], "=1.68")), face = "bold", size = 20, rot = 90))
annotatedfigureHR
proportions<-list()
#Apply first function
proportions$PPTTP<- giveproportions(Decisions$PTTP)
proportions$PRMEANbootdiff <- giveproportions(Decisions$PRMEANbootdiff)
proportions$RMEANdiff <-giveproportions(Decisions$PRMEANdiff)
proportions$PHRboot <- giveproportions(Decisions$PHRboot)
proportions$PHR <- giveproportions(Decisions$PHR)
#Apply second function
proportions$PNeverPool <- giveproportionsNOpool(Decisions$PNeverPool)
proportions$PAlwaysPool <- giveproportionsNOpool(Decisions$PAlwaysPool)
#D11
D11 <- proportionsplot(dat = 1, setyaxis = c(proportions$PNeverPool[1,5]-(0.6*abs(proportions$PAlwaysPool[1,5]-proportions$PNeverPool[1,5])),
proportions$PAlwaysPool[1,5]+(0.05*abs(proportions$PAlwaysPool[1,5]-proportions$PNeverPool[1,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[1,5], TPFPneverpool = proportions$PNeverPool[1,5])
#D12
D12 <- proportionsplot(dat = 2, setyaxis = c(proportions$PNeverPool[2,5]+(0.05*abs(proportions$PAlwaysPool[2,5]-proportions$PNeverPool[2,5])),
proportions$PAlwaysPool[2,5]-(0.6*abs(proportions$PAlwaysPool[2,5]-proportions$PNeverPool[2,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[2,5], TPFPneverpool = proportions$PNeverPool[2,5])
#D13
D13 <- proportionsplot(dat = 3, setyaxis = c(proportions$PAlwaysPool[3,5]-(0.05*abs(proportions$PAlwaysPool[3,5]-proportions$PNeverPool[3,5])),
proportions$PNeverPool[3,5]+(0.05*abs(proportions$PAlwaysPool[3,5]-proportions$PNeverPool[3,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[3,5], TPFPneverpool = proportions$PNeverPool[3,5])
#D14
D14 <- proportionsplot(dat = 4, setyaxis = c(proportions$PAlwaysPool[4,5]-(0.05*abs(proportions$PAlwaysPool[4,5]-proportions$PNeverPool[4,5])),
proportions$PNeverPool[4,5]+(0.05*abs(proportions$PAlwaysPool[4,5]-proportions$PNeverPool[4,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[4,5], TPFPneverpool = proportions$PNeverPool[4,5])
D21 <- proportionsplot(dat = 5, setyaxis = c(proportions$PAlwaysPool[5,5]-(0.05*abs(proportions$PAlwaysPool[5,5]-proportions$PNeverPool[5,5])),
proportions$PNeverPool[5,5]+(0.05*abs(proportions$PAlwaysPool[5,5]-proportions$PNeverPool[5,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[5,5], TPFPneverpool = proportions$PNeverPool[5,5])
D22 <- proportionsplot(dat = 6, setyaxis = c(proportions$PAlwaysPool[6,5]-(0.05*abs(proportions$PAlwaysPool[6,5]-proportions$PNeverPool[6,5])),
proportions$PNeverPool[6,5]+(0.05*abs(proportions$PAlwaysPool[6,5]-proportions$PNeverPool[6,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[6,5], TPFPneverpool = proportions$PNeverPool[6,5])
D23 <- proportionsplot(dat = 7, setyaxis = c(proportions$PAlwaysPool[7,5]-(0.05*abs(proportions$PAlwaysPool[7,5]-proportions$PNeverPool[7,5])),
proportions$PNeverPool[7,5]+(0.05*abs(proportions$PAlwaysPool[7,5]-proportions$PNeverPool[7,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[7,5], TPFPneverpool = proportions$PNeverPool[7,5])
D24 <- proportionsplot(dat = 8, setyaxis = c(proportions$PAlwaysPool[8,5]-(0.05*abs(proportions$PAlwaysPool[4,5]-proportions$PNeverPool[8,5])),
proportions$PNeverPool[8,5]+(0.05*abs(proportions$PAlwaysPool[8,5]-proportions$PNeverPool[8,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[8,5], TPFPneverpool = proportions$PNeverPool[8,5])
arrangedfigure <- ggpubr::ggarrange(D11, D21, D12, D22, D13, D23, D14, D24,
#         labels = c("D11", "D21", "D12", "D22", "D13", "D23", "D14", "D24"),
labels = c(" A ", " B ","C1", "D1", "C2", "D2", "C3", "D3"),
ncol = 2, nrow = 4, common.legend = TRUE, vjust = +1.3, hjust = -1.8, align = "hv", legend = "bottom")
annotatedfigureHRprop <- ggpubr::annotate_figure(arrangedfigure,
top = ggpubr::text_grob(expression(paste(lambda["c"],"= 776.89                                   ",lambda["c"],"= 876.89")), face = "bold", size = 20),
left = ggpubr::text_grob(expression(paste(gamma["c"],"=2.184                ", gamma["c"], "=2.02                ", gamma["c"], "=1.85                ", gamma["c"], "=1.68")), face = "bold", size = 20, rot = 90))
annotatedfigureHRprop
load("3.FinalAnalysis_output/3.ProportionsTPFPrmeanShape.Rdata")
load("3.FinalAnalysis_output/3.DecisionsFinalAnalyses400rmean3Shape.Rdata")
load("3.FinalAnalysis_output/3.Pooldecisions400rmean3Shape.Rdata")
makeDF <- function(proportions, dat=1){ #example: proportions$PHR
TP <- vector()
FP <- vector()
for (i in 1:length(proportions)){
TP[i] = proportions[[i]][dat,3]
FP[i] = proportions[[i]][dat,4]
}
data <- data.frame(TP = TP, FP=FP)
return(data)
}
#plot(TP, FP)
proportions<-list()
#Apply first function
proportions$PPTTP<- giveproportions(Decisions$PTTP)
proportions$PRMEANbootdiff <- giveproportions(Decisions$PRMEANbootdiff)
proportions$RMEANdiff <-giveproportions(Decisions$PRMEANdiff)
proportions$PHRboot <- giveproportions(Decisions$PHRboot)
proportions$PHR <- giveproportions(Decisions$PHR)
#Apply second function
proportions$PNeverPool <- giveproportionsNOpool(Decisions$PNeverPool)
proportions$PAlwaysPool <- giveproportionsNOpool(Decisions$PAlwaysPool)
proportionsplot <- function(dat=1, setyaxis, xlim = c(0, 1), TPFPalwayspool, TPFPneverpool){
dataframeTTP <- data.frame(
"TPFP" = makeDF(proportions = proportions$PPTTP, dat=dat)[,1]/makeDF(proportions = proportions$PPTTP, dat=dat)[,2],
"proportionpooled"= npool(dataset = PoolDecisions$TTP, dat=dat))
dataframeHR <- data.frame(
"TPFP" = makeDF(proportions = proportions$PHR, dat=dat)[,1]/makeDF(proportions = proportions$PHR, dat=dat)[,2],
"proportionpooled"= npool(dataset = PoolDecisions$CIsHR, dat=dat))
dataframeHRboot <- data.frame(
"TPFP" = makeDF(proportions = proportions$PHRboot, dat=dat)[,1]/makeDF(proportions = proportions$PHRboot, dat=dat)[,2],
"proportionpooled"= npool(dataset = PoolDecisions$BootCIsHR, dat=dat))
dataframerMean <- data.frame(
"TPFP" = makeDF(proportions = proportions$RMEANdiff, dat=dat)[,1]/makeDF(proportions = proportions$RMEANdiff, dat=dat)[,2],
"proportionpooled"= npool(dataset = PoolDecisions$CIsRMEANdiff, dat=dat))
dataframerMeanBoot <- data.frame(
"TPFP" = makeDF(proportions = proportions$PRMEANbootdiff, dat=dat)[,1]/makeDF(proportions = proportions$PRMEANbootdiff, dat=dat)[,2],
"proportionpooled"= npool(dataset = PoolDecisions$BootCIsRMEANdiff, dat=dat))
plot <- ggplot(dataframeHR, aes(x=proportionpooled, y=TPFP))+
geom_point(data= dataframeHR,  aes(x=proportionpooled, y=TPFP, colour = "HReq"), size = 3, show.legend = TRUE)+
geom_path(data= dataframeHR,  aes(x=proportionpooled, y=TPFP, colour = "HReq"), size = 1)+
geom_point(data= dataframeHRboot,  aes(x=proportionpooled, y=TPFP, colour = "HRboot"), size = 3)+
geom_path(data= dataframeHRboot,  aes(x=proportionpooled, y=TPFP, colour = "HRboot"), size = 1)+
geom_point(data= dataframeTTP,  aes(x=proportionpooled, y=TPFP, colour = "HRdiff"), size = 3)+
geom_path(data= dataframeTTP,  aes(x=proportionpooled, y=TPFP, colour = "HRdiff"), size = 1)+
geom_point(data= dataframerMeanBoot,  aes(x=proportionpooled, y=TPFP, colour = "RMSTboot"), size = 3)+
geom_path(data= dataframerMeanBoot,  aes(x=proportionpooled, y=TPFP, colour = "RMSTboot"), size = 1)+
geom_point(data= dataframerMean,  aes(x=proportionpooled, y=TPFP, colour = "RMST"), size = 3)+
geom_path(data= dataframerMean,  aes(x=proportionpooled, y=TPFP, colour = "RMST"), size = 1)+
geom_point(data= dataframerMeanBoot,  aes(x=proportionpooled, y=TPFP, colour = "RMSTboot"), size = 3)+
geom_path(data= dataframerMeanBoot,  aes(x=proportionpooled, y=TPFP, colour = "RMSTboot"), size = 1)+
scale_color_manual("", breaks = c("HRdiff" = "HRdiff", "RMSTboot"= "RMSTboot", "RMST" = "RMST", "HRboot" ="HRboot", "HReq" = "HReq"),
values=cbPalette)+
geom_hline(aes(yintercept= TPFPalwayspool, linetype = "AlwaysPool"), colour= 'black', size = 1) +
geom_hline(aes(yintercept= TPFPneverpool, linetype = "NeverPool"), colour= 'black', size = 1) +
#scale_linetype_manual(name = "", values = c(1, 2),
#                      guide = guide_legend(override.aes = list(values = c(1, 2),
#                        color = c("black", "black"), shape = c("", ""))))+
coord_cartesian(ylim = setyaxis) +
xlab("Proportion of the datasets pooled") +
ylab("TPR/FPR") +
scale_x_continuous(limits = xlim) +
theme(aspect.ratio = 0.5)+
guides(linetype=FALSE) +
guides(shape = guide_legend(override.aes = list(linetype = 0)))+
#guides(linetype=FALSE) +
theme_cowplot(12)
return(plot)}
#D11
D11 <- proportionsplot(dat = 1, setyaxis = c(proportions$PNeverPool[1,5]-(0.4*abs(proportions$PAlwaysPool[1,5]-proportions$PNeverPool[1,5])),
proportions$PAlwaysPool[1,5]+(0.1*abs(proportions$PAlwaysPool[1,5]-proportions$PNeverPool[1,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[1,5], TPFPneverpool = proportions$PNeverPool[1,5])
#D12
D12 <- proportionsplot(dat = 2, setyaxis = c(proportions$PNeverPool[2,5]+(0.1*abs(proportions$PAlwaysPool[2,5]-proportions$PNeverPool[2,5])),
proportions$PAlwaysPool[2,5]-(0.1*abs(proportions$PAlwaysPool[2,5]-proportions$PNeverPool[2,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[2,5], TPFPneverpool = proportions$PNeverPool[2,5])
#D13
D13 <- proportionsplot(dat = 3, setyaxis = c(proportions$PAlwaysPool[3,5]-(0.1*abs(proportions$PAlwaysPool[3,5]-proportions$PNeverPool[3,5])),
proportions$PNeverPool[3,5]+(0.1*abs(proportions$PAlwaysPool[3,5]-proportions$PNeverPool[3,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[3,5], TPFPneverpool = proportions$PNeverPool[3,5])
#D14
D14 <- proportionsplot(dat = 4, setyaxis = c(proportions$PAlwaysPool[4,5]-(0.1*abs(proportions$PAlwaysPool[4,5]-proportions$PNeverPool[4,5])),
proportions$PNeverPool[4,5]+(0.1*abs(proportions$PAlwaysPool[4,5]-proportions$PNeverPool[4,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[4,5], TPFPneverpool = proportions$PNeverPool[4,5])
D21 <- proportionsplot(dat = 5, setyaxis = c(proportions$PAlwaysPool[5,5]-(0.1*abs(proportions$PAlwaysPool[5,5]-proportions$PNeverPool[5,5])),
proportions$PNeverPool[5,5]+(0.1*abs(proportions$PAlwaysPool[5,5]-proportions$PNeverPool[5,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[5,5], TPFPneverpool = proportions$PNeverPool[5,5])
D22 <- proportionsplot(dat = 6, setyaxis = c(proportions$PAlwaysPool[6,5]-(0.1*abs(proportions$PAlwaysPool[6,5]-proportions$PNeverPool[6,5])),
proportions$PNeverPool[6,5]+(0.1*abs(proportions$PAlwaysPool[6,5]-proportions$PNeverPool[6,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[6,5], TPFPneverpool = proportions$PNeverPool[6,5])
D23 <- proportionsplot(dat = 7, setyaxis = c(proportions$PAlwaysPool[7,5]-(0.1*abs(proportions$PAlwaysPool[7,5]-proportions$PNeverPool[7,5])),
proportions$PNeverPool[7,5]+(0.1*abs(proportions$PAlwaysPool[7,5]-proportions$PNeverPool[7,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[7,5], TPFPneverpool = proportions$PNeverPool[7,5])
D24 <- proportionsplot(dat = 8, setyaxis = c(proportions$PAlwaysPool[8,5]-(0.1*abs(proportions$PAlwaysPool[4,5]-proportions$PNeverPool[8,5])),
proportions$PNeverPool[8,5]+(0.1*abs(proportions$PAlwaysPool[8,5]-proportions$PNeverPool[8,5]))),
xlim = c(0,1), TPFPalwayspool = proportions$PAlwaysPool[8,5], TPFPneverpool = proportions$PNeverPool[8,5])
arrangedfigure <- ggpubr::ggarrange(D11, D21, D12, D22, D13, D23, D14, D24,
labels = c(" A ", " B ","C1", "D1", "C2", "D2", "C3", "D3"),
ncol = 2, nrow = 4, common.legend = TRUE, vjust = +0.2, hjust = -1.6, align = "hv", legend = "bottom")
annotatedfigureRMSTprop <- ggpubr::annotate_figure(arrangedfigure,
top = ggpubr::text_grob(expression(paste(lambda["c"],"= 776.89                                   ",lambda["c"],"= 876.89")), face = "bold", size = 20))
annotatedfigureRMSTprop
arrangedfigurebeiden <- ggpubr::ggarrange(annotatedfigureHR, annotatedfigureRMST,
ncol = 2, nrow = 1, common.legend = TRUE, align = "hv", legend = "bottom")
arrangedfigureBOTH <- ggpubr::ggarrange(annotatedfigureHR, annotatedfigureRMSTpropp,
ncol = 2, nrow = 1, common.legend = TRUE, align = "hv", legend = "bottom")
arrangedfigureBOTH <- ggpubr::ggarrange(annotatedfigureHR, annotatedfigureRMSTprop,
ncol = 2, nrow = 1, common.legend = TRUE, align = "hv", legend = "bottom")
annotatedfigureBOTH <- ggpubr::annotate_figure(arrangedfigureBOTH,
top = ggpubr::text_grob("HR as final analysis                                                                                  RMST as final analysis", face = "bold", size = 20))
#saveplot
#ggsave("4.DataVisualization_output/1.Sim2.png", plot = annotatedfigureBOTH, width = 20, height = 10)F
annotatedfigureBOTH
arrangedfigureBOTH <- ggpubr::ggarrange(annotatedfigureHRprop, annotatedfigureRMSTprop,
ncol = 2, nrow = 1, common.legend = TRUE, align = "hv", legend = "bottom")
annotatedfigureBOTH <- ggpubr::annotate_figure(arrangedfigureBOTH,
top = ggpubr::text_grob("HR as final analysis                                                                                  RMST as final analysis", face = "bold", size = 20))
annotatedfigureBOTH
#saveplot
#ggsave("4.DataVisualization_output/1.Sim2.png", plot = annotatedfigureBOTH, width = 20, height = 10)F
arrangedfigureProp <- ggpubr::ggarrange(annotatedfigureHRprop, annotatedfigureRMSTprop,
#  labels = c(" A ", " A "),
ncol = 2, nrow = 1, common.legend = TRUE, align = "hv", legend = "bottom")
annotatedfigureProp <- ggpubr::annotate_figure(arrangedfigureProp,
top = ggpubr::text_grob("HR as final analysis                                                                                                                 RMST as final analysis", face = "bold", size = 15))
annotatedfigureProp
#saveplot
#ggsave("4.DataVisualization_output/prop2.png", plot = annotatedfigureProp, width = 20, height = 10)
